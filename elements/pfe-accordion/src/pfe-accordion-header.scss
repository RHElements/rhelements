@import "shared-assets";

/// ===========================================================================
/// ACCORDION HEADER
/// ===========================================================================
:host {
  @include pfe-hidden;
  box-shadow: pfe-local(BoxShadow, "none");
  --pfe-icon--color: #{pfe-local(Color)};
}

:host([expanded]),
:host(.animating) {
  box-shadow: pfe-local(BoxShadow);
}

// Remove margins from the heading
#heading {
  margin: 0;
}

#button {
  margin: 0;
  margin-right: calc(#{pfe-local(BorderLeftWidth)} + #{pfe-var(surface--border-width--heavy)});

  height: auto;
  width: 100%;

  display: inline-flex;
  align-items: center;
  gap: pfe-var(container-spacer);

  z-index: pfe-local(ZIndex);

  // Since the default bg color is transparent, look to broadcast values
  background-color: pfe-local(BackgroundColor);
  color: pfe-local(Color);

  padding: pfe-local(Padding);

  // Border settings
  border-style: pfe-var(surface--border-style);
  border-color: pfe-local(BorderColor);

  border-top-width: pfe-local(BorderTopWidth);
  border-right-width: pfe-local(BorderRightWidth);
  border-bottom-width: pfe-local(BorderBottomWidth, 0);
  border-left-width: pfe-local(BorderLeftWidth);

  border-left-color: transparent;
  border-right-color: transparent;

  // -webkit-appearance: button;
  cursor: pointer;

  font-family: inherit;
  font-size: pfe-local(FontSize--header, calc(#{pfe-var(font-size)} * 1.1));
  font-weight: pfe-var(font-weight--bold);
  text-align: pfe-local(TextAlign);
  line-height: pfe-var(line-height);

  slot {
    display: block;
    flex-grow: 1;
  }

  pfe-icon {
    transition: transform 0.3s pfe-var(animation-timing);
  }

  :host(:hover) &,
  &:hover {
    outline: none;
    border-right-color: pfe-local(BorderColor);
    border-left-color: pfe-local(accent);
  }

  :host(:focus) &,
  &:focus {
    outline: none;
    text-decoration: underline;
  }

  :host([is-navigation]:focus) &,
  :host([is-navigation]) &:focus {
    border-right-color: pfe-local(BorderColor);
    border-left-color: pfe-local(accent);
  }

  // Add border bottom to the last button in an accordion set
  :host(:last-of-type) & {
    border-bottom-width: pfe-local(BorderBottomWidth);
  }

  :host([expanded]) &,
  :host(.animating) & {
    border-left-color: pfe-local(accent);
    border-right-color: pfe-local(BorderColor);
    border-bottom-width: 0;

    pfe-icon {
      transform: rotate(-90deg);
    }

    @include browser-query(ie11) {
      padding: 16px 24px;
      background-color: pfe-fetch(surface--lightest) !important;
      color: pfe-fetch(text) !important;
  
      &:hover {
        border-left-color: pfe-fetch(ui-accent);
      }
    }
  }
}

/// ===========================================================================
/// DISCLOSURE STYLES
/// ===========================================================================
:host([disclosure="true"]) #button {
  border-left-width: pfe-local(BorderLeftWidth, pfe-var(surface--border-width));
  border-right-color: pfe-local(BorderColor);
  border-left-color: pfe-local(BorderColor);

  // padding-left: calc(#{pfe-var(container-spacer)} * 3);

  pfe-icon {
    align-self: flex-start;
    order: -1;
  }

  &:hover {
    border-left-width: pfe-local(BorderLeftWidth);
    border-left-color: pfe-local(accent);
    border-right-color: pfe-local(BorderColor);

    // padding-left: calc(#{pfe-var(container-spacer)} * 3 + #{pfe-var(surface--border-width)} - #{pfe-local(BorderLeftWidth)});

    pfe-icon {
      margin-left: calc(#{pfe-var(surface--border-width)} - #{pfe-local(BorderLeftWidth)});
    }
  }
}

:host([disclosure="true"][expanded]) #button,
:host([disclosure="true"].animating) #button {
  border-left-width: pfe-local(BorderLeftWidth);
  border-left-color: pfe-local(accent);
  border-right-color: pfe-local(BorderColor);

  // padding-left: calc(#{pfe-var(container-spacer)} * 3 + #{pfe-var(surface--border-width)} - #{pfe-local(BorderLeftWidth)});

  pfe-icon {
    transform: rotate(90deg);
    // margin-left: calc(#{pfe-var(surface--border-width)} - #{pfe-local(BorderLeftWidth)});
  }
}

/// ===========================================================================
/// CONTEXT FOR EXPANDED
/// ===========================================================================
:host([on="light"][expanded]),
:host([on="light"].animating) {
  --pfe-accordion--BackgroundColor: #{pfe-local(BackgroundColor--expanded)};
  --pfe-accordion--Color:           #{pfe-local(Color--expanded)};
  --pfe-accordion--accent:          #{pfe-local(accent--expanded)};
}

:host(:not([on="light"])) {
  --pfe-accordion--BoxShadow: "none";
}

:host([on="dark"]) #button:hover,
:host([is-navigation][on="dark"]:focus) #button {
  border-left-color:  pfe-local(accent, pfe-var(ui-accent--on-dark));
}

:host([on="dark"][expanded]),
:host([on="dark"].animating) {
  --pfe-accordion--BackgroundColor: #{pfe-local(BackgroundColor--expanded, rgba(247, 247, 249, .1))};
  --pfe-accordion--Color:           #{pfe-local(Color--expanded, pfe-broadcasted(text--on-dark))};
  --pfe-accordion--accent:          #{pfe-local(accent--expanded, pfe-var(ui-accent--on-dark))};
}

:host([on="saturated"]) #button:hover,
:host([is-navigation][on="saturated"]:focus) #button {
  border-left-color:  pfe-local(accent, pfe-var(ui-accent--on-saturated));
}

:host([on="saturated"][expanded]),
:host([on="saturated"].animating) {
  --pfe-accordion--BackgroundColor: #{pfe-local(BackgroundColor--expanded, rgba(0, 0, 0, 0.2))};
  --pfe-accordion--Color:           #{pfe-local(Color--expanded, pfe-broadcasted(text--on-saturated))};
  --pfe-accordion--accent:          #{pfe-local(accent--expanded, pfe-var(ui-accent--on-saturated))};
}
